<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<!-- 如果需要权限， 然而没有登录的话，会跳转到 登录界面url /rest/page/login -->
		<property name="loginUrl" value="/login" />
		<!-- 登录成功后会跳转到 /rest/index -->
		<property name="successUrl" value="/hello2" />
		<!-- 登录后如果没有权限的话，会跳转到 /rest/page/401 -->
		<property name="unauthorizedUrl" value="/err401" />

		<property name="filters">
			<map>
				<entry key="authc">
					<bean class="org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter"/>
				</entry>
				<entry key="authc" value-ref="ajaxUserFilter" />
			</map>
		</property>
		<!--<property name="filterChainDefinitions">-->
			<!--<value>-->
				<!--&lt;!&ndash; 静态资源允许访问 &ndash;&gt;-->
				<!--&lt;!&ndash;/app/** = anon&ndash;&gt;-->
				<!--/loginPost = anon-->
				<!--/err401 = anon-->
				<!--/** = authc-->
				<!--&lt;!&ndash; 登录页允许访问 &ndash;&gt;-->
				<!--&lt;!&ndash;/rest/user/login = anon&ndash;&gt;-->
				<!--&lt;!&ndash; 如果某个资源允许访问， 直接匹配成anon 即可 &ndash;&gt;-->
				<!--&lt;!&ndash; /rest/user/* = anon &ndash;&gt;-->
				<!--&lt;!&ndash; 如果某个资源需要认证，且要有相应的角色，可以直接如下设置，可以设置多个角色用逗号隔开, 有可以设置权限控制 &ndash;&gt;-->
				<!--&lt;!&ndash; 也是使用注解来实现，注意要在spring-mvc.xml 中启用shiro授权注解， 使用方式具体见 UserController -->
					<!--类 &ndash;&gt;-->
				<!--&lt;!&ndash;/rest/user/admin = authc ,roles[admin] ,perms[user:create]&ndash;&gt;-->
				<!--&lt;!&ndash; /rest/user/admin = authc ,perms[user:create] &ndash;&gt;-->
				<!--&lt;!&ndash; 其他资源需要认证 ，需要认证的资源 匹配成 authc &ndash;&gt;-->
				<!--&lt;!&ndash; /** = authc &ndash;&gt;-->
			<!--</value>-->
		<!--</property>-->
	</bean>

	<!-- 缓存管理器 使用Ehcache实现 -->
	<bean id="shiroEhcacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManagerConfigFile" value="classpath:config/ehcache-shiro.xml" />
	</bean>

	<!-- 会话DAO -->
	<bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.MemorySessionDAO" />

	<!-- 开启Shiro的注解(如@RequiresRoles,@RequiresPermissions),需借助SpringAOP扫描使用Shiro注解的类,并在必要时进行安全逻辑验证 -->
	<!-- 配置以下两个bean即可实现此功能 -->
	<bean
			class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
			depends-on="lifecycleBeanPostProcessor" />
	<bean
			class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>
	<!-- 会话管理器 -->
	<bean id="sessionManager"
		class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<property name="sessionDAO" ref="sessionDAO" />
	</bean>
	<!-- 会话Cookie模板 -->
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="sid" />
		<property name="httpOnly" value="true" />
		<!-- maxAge=-1表示浏览器关闭时失效此Cookie； -->
		<property name="maxAge" value="-1" />
	</bean>
	<!-- <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="rememberMe" />
		<property name="httpOnly" value="true" />
		即记住我的Cookie，保存时长30天；
		<property name="maxAge" value="2592000" />30天
	</bean> -->

 <!-- rememberMe管理器 -->
   <!--  <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        rememberMe cookie加密的密钥 建议每个项目都不一样 默认AES算法 密钥长度（128 256 512 位）
        <property name="cipherKey"
                  value="#{T(org.apache.shiro.codec.Base64).decode('3AvVhmFLUs0KTA3Kprsdag==')}"/>
        <property name="cookie" ref="rememberMeCookie"/>
    </bean> -->
	<!-- 安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="securityRealm"/>
		<!-- cacheManager,集合spring缓存工厂 -->
		<!-- <property name="cacheManager" ref="shiroEhcacheManager" /> -->
		 <property name="sessionManager" ref="sessionManager"/>
       <!--  <property name="rememberMeManager" ref="rememberMeManager"/> -->
	</bean>

	<!-- Shiro生命周期处理器 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

</beans>